---
dependency:
  name: galaxy

driver:
  # Specifies the driver that should be used. Podman should also work
  name: docker

platforms:
  # Set name and hostname
  - &instance
    name: ns1
    hostname: ns1
    # Specify which image should be used. Geerlingguys images are Ansible
    # compatible and have Systemd installed
    docker_networks:
      - name: bind
        ipam_config:
          - subnet: "10.11.0.0/16"
            gateway: "10.11.0.254"
    networks:
      - name: bind
        ipv4_address: "10.11.0.1"
    image: ${image:-debian}:${tag:-latest}
    privileged: true
    tty: true
    # Volumes to mount within the container. Important to enable systemd
    volumes:
      - "/sys/fs/cgroup:/sys/fs/cgroup:rw"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    stop_signal: "SIGRTMIN+3"
    capabilities:
      - SYS_ADMIN
      - SYS_TIME
      - LINUX_IMMUTABLE
    command: "/lib/systemd/systemd"

  - <<: *instance
    name: ns2
    hostname: ns2
    networks:
      - name: bind
        ipv4_address: "10.11.0.2"

  - <<: *instance
    name: ns3
    hostname: ns3
    networks:
      - name: bind
        ipv4_address: "10.11.0.3"

provisioner:
  name: ansible
  env:
    ANSIBLE_FORCE_COLOR: "true"
  options:
    v: true
  config_options:
    defaults:
      interpreter_python: auto_legacy_silent
      callback_whitelist: profile_tasks

# Runs the verify.yml playbook
verifier:
  name: ansible

# Linting with yamllint and ansible-lint
lint: |
  set -e
  yamllint .
  ansible-lint